This is a Node.js adaptation of GoldDigger, a gaming server/map visualizer written in Java. 

===Introduction===
 In a not too distant future resources on earth has gotten very scarce and the demand for certain minerals has made the prices skyrocket. The race for space minerals has begun.

 Your team has recently made significant progress in the field of fast space travel combined with advanced remote communication and are on the verge of being able to send small mineral collecting spiceships. Complete with a collecting probe, also known as a mineral digger or just 'digger'.

 The first spaceship landed approximately 15 minutes ago and are awaiting your commands. It is located in a small cave, hoovering on top of the mineral drop zone. Be careful, even though the diggers are sturdy constructions it is easy to get lost in the vast caves. 

And remember, she who controls the minerals, controls the universe!

Good luck.


==Goal of the game==

The primary goal of the game is to collect as much minerals as you possibly can during a predetermined period of time. This is best done using the REST-like API that the server provides. More on the API later.

The 'client' used to visualize the game is configured for up to 4 different simultanious competitors. But the server hasn't been 'load tested'. It is however possible to add an arbitraty number of clients to the 'players' file, allowing for a lot of simultanious player on the same node.js instance.

==Getting started==

=Pre-reqs=
To run your own server you need:
- Node.js (http://nodejs.org/)
- NPM (http://npmjs.org/)
- Faye (http://faye.jcoglan.com/)

=Configuration=
- Take a look at the file '<path to nodedigger>/server/players'-dir. It consists of rows with tuples: BotName + password. 

The server is tested with bot names that contain no spaces and only small or large letters. Good names can be found in the players file. Bad names include: L33tZûrz €€==> or '._. <= The Whale Lives III' or the untested '%¤-¤%'.

If you want the server to run on specific ports you need to edit nodedigger.js and the visualizer, if you're planning on using that.

=Getting started=

Start the server: node nodedigger.js
Launch browser, and open file: <<nodediggerdir>>/clients/world/map.html